/**
 * =============================================================================
 * == Kaplay.js 开发环境脚本 ==
 * =============================================================================
 *
 * 这是Kaplay.js开发时使用的脚本，它能启动一个开发服务器，让你立即看到代码变化的效果。
 * 对于游戏开发者来说，这就像是有一个随时待命的游戏测试员，每当你改动代码，它就立刻给你反馈！
 * 
 * 工作原理：
 * 1. 导入专门的开发服务器模块 "./dev/dev.js"
 * 2. 调用其中的dev()函数来启动开发环境
 * 
 * 开发环境做什么？
 * - 启动一个本地web服务器（通常在localhost的某个端口）
 * - 监视源代码文件的变化（使用文件监听器）
 * - 当检测到文件变化时，自动重新构建项目
 * - 使用热重载（Hot Reloading）技术，让变化立即反映在浏览器中，无需手动刷新
 * - 显示编译错误和警告，帮助你快速定位问题
 * 
 * 为什么这很重要：
 * 想象一下如果没有这个脚本，你每次改动代码后都需要：
 * 1. 手动运行构建命令
 * 2. 等待构建完成
 * 3. 刷新浏览器
 * 4. 重新进入你正在测试的游戏场景
 * 
 * 有了这个脚本，所有这些步骤都是自动的，让你可以专注于创作而不是重复性工作！
 * 
 * 使用方法：
 * 通常在package.json中配置一个"dev"命令来运行这个脚本，例如：
 * "scripts": { "dev": "node scripts/dev.js" }
 * 然后只需在终端运行 npm run dev 或 pnpm dev 即可启动开发环境
 */

// @ts-check

import { dev } from "./dev/dev.js";

await dev();
